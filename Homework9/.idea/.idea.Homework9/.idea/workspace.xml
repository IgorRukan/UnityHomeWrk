<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="4928cbb7-a93f-42da-9d4c-7013cf83bad6" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/Assets/Scripts/GameManager.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Assets/Scripts/Wall.cs" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="ProjectId" id="2WwfoWGzaYSCi1v2GzcYY4fzgr8" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true"
  },
  "keyToStringList": {
    "rider.external.source.directories": [
      "C:\\Users\\vasya\\AppData\\Roaming\\JetBrains\\Rider2023.1\\resharper-host\\DecompilerCache",
      "C:\\Users\\vasya\\AppData\\Roaming\\JetBrains\\Rider2023.1\\resharper-host\\SourcesCache",
      "C:\\Users\\vasya\\AppData\\Local\\Symbols\\src"
    ]
  }
}]]></component>
  <component name="RunManager" selected="Attach to Unity Editor.Attach to Unity Editor">
    <configuration name="Start Unity" type="RunUnityExe" factoryName="Unity Executable">
      <option name="EXE_PATH" value="C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Unity.exe" />
      <option name="PROGRAM_PARAMETERS" value="-projectPath C:\Users\vasya\Homework9 -debugCodeOptimization" />
      <option name="WORKING_DIRECTORY" value="C:\Users\vasya\Homework9" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <method v="2" />
    </configuration>
    <configuration name="Unit Tests (batch mode)" type="RunUnityExe" factoryName="Unity Executable">
      <option name="EXE_PATH" value="C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Unity.exe" />
      <option name="PROGRAM_PARAMETERS" value="-runTests -batchmode -projectPath C:\Users\vasya\Homework9 -testResults Logs/results.xml -testPlatform EditMode -debugCodeOptimization" />
      <option name="WORKING_DIRECTORY" value="C:\Users\vasya\Homework9" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <method v="2" />
    </configuration>
    <configuration name="Attach to Unity Editor &amp; Play" type="UNITY_DEBUG_RUN_CONFIGURATION" factoryName="UNITY_ATTACH_AND_PLAY" show_console_on_std_err="false" show_console_on_std_out="false" port="50000" address="localhost">
      <option name="allowRunningInParallel" value="false" />
      <option name="listenPortForConnections" value="false" />
      <option name="pid" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <method v="2" />
    </configuration>
    <configuration name="Attach to Unity Editor" type="UNITY_DEBUG_RUN_CONFIGURATION" factoryName="Unity Debug" show_console_on_std_err="false" show_console_on_std_out="false" port="50000" address="localhost">
      <option name="allowRunningInParallel" value="false" />
      <option name="listenPortForConnections" value="false" />
      <option name="pid" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="4928cbb7-a93f-42da-9d4c-7013cf83bad6" name="Changes" comment="" />
      <created>1697648741806</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1697648741806</updated>
      <workItem from="1697648743951" duration="4717000" />
    </task>
    <servers />
  </component>
  <component name="UnityProjectConfiguration" hasMinimizedUI="true" />
  <component name="UnityUnitTestConfiguration" currentTestLauncher="Both" />
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
  </component>
  <component name="com.github.evgenys91.machinet.common.dslhistory.DslHistoryState">
    <option name="historyDtoById">
      <map>
        <entry key="bb3b2e">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/Assets/Scripts/Player.cs" />
                </list>
              </option>
              <option name="id" value="bb3b2e" />
              <option name="initiateTms" value="1697649638217" />
              <option name="request" value="не прыгает" />
              <option name="response" value="" />
              <option name="responseDescription" value="Если ваш персонаж не прыгает, есть несколько возможных причин. Давайте проверим код и убедимся, что все настроено правильно.&#10;&#10;1. Убедитесь, что у вас есть компонент Rigidbody2D на объекте игрока. Если его нет, добавьте его следующим образом:&#10;```csharp&#10;rb = GetComponent&lt;Rigidbody2D&gt;();&#10;```&#10;&#10;2. Проверьте, что вы назначили правильное значение переменной `jumpForce`. Убедитесь, что она больше нуля и подходит для вашей игры.&#10;&#10;3. Убедитесь, что у вас есть объект &quot;Ground&quot; с тегом &quot;Ground&quot;, с которым ваш игрок должен сталкиваться, чтобы сбросить переменную `isJumping`. Если у вас нет такого объекта или тега, добавьте его и установите соответствующий тег.&#10;&#10;4. Проверьте, что ваш персонаж находится на земле и может прыгать. Убедитесь, что ваш персонаж находится на поверхности, которая имеет коллайдер и физический материал.&#10;&#10;Если после проверки все еще не работает, пожалуйста, предоставьте больше информации о вашей сцене и настройках, чтобы я мог помочь вам более точно." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1697649643908" />
              <option name="usedFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/Assets/Scripts/Player.cs" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="cb1be4">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/Assets/Scripts/Player.cs" />
                </list>
              </option>
              <option name="id" value="cb1be4" />
              <option name="initiateTms" value="1697649519428" />
              <option name="request" value="как сделать прыжок в 2d" />
              <option name="response" value="" />
              <option name="responseDescription" value="Чтобы реализовать прыжок в 2D, вам понадобится использовать физический движок Unity и добавить некоторый код в ваш класс Player. Вот пример, как это можно сделать:&#10;&#10;```csharp&#10;using UnityEngine;&#10;&#10;public class Player : MonoBehaviour&#10;{&#10;    public float speed;&#10;    private Rigidbody2D rb;&#10;    public float jumpForce;&#10;    private bool isJumping;&#10;&#10;    void Start()&#10;    {&#10;        rb = GetComponent&lt;Rigidbody2D&gt;();&#10;    }&#10;&#10;    void Update()&#10;    {&#10;        if (Input.GetKeyDown(KeyCode.Space) &amp;&amp; !isJumping)&#10;        {&#10;            rb.AddForce(new Vector2(0f, jumpForce), ForceMode2D.Impulse);&#10;            isJumping = true;&#10;        }&#10;    }&#10;&#10;    void OnCollisionEnter2D(Collision2D collision)&#10;    {&#10;        if (collision.gameObject.CompareTag(&quot;Ground&quot;))&#10;        {&#10;            isJumping = false;&#10;        }&#10;    }&#10;}&#10;```&#10;&#10;В этом примере мы добавили переменную `isJumping`, которая позволяет нам проверить, находится ли игрок в процессе прыжка. Когда игрок нажимает клавишу пробела и не находится в процессе прыжка, мы применяем силу вверх с помощью `rb.AddForce`. Затем мы используем метод `OnCollisionEnter2D` для обнаружения столкновения с землей и сброса переменной `isJumping` в false.&#10;&#10;Убедитесь, что у вас есть компонент Rigidbody2D на объекте игрока, чтобы физический движок мог обрабатывать прыжки." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1697649525388" />
              <option name="usedFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/Assets/Scripts/Player.cs" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="greeting">
          <value>
            <ChatHistoryModel>
              <option name="id" value="greeting" />
              <option name="initiateTms" value="1697649384406" />
              <option name="request" value="" />
              <option name="response" value="" />
              <option name="responseDescription" value="&#10;Hello, I am Machinet AI - context aware chat, which can help you with your daily programming routine. How can I help?" />
              <option name="responseTms" value="1697649386250" />
            </ChatHistoryModel>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>